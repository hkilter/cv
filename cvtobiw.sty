\RequirePackage{expl3,l3keys2e}
\ProvidesExplPackage{cvtobiw}{2015/08/19}{1.0}{CV for Tobi W_}



% MESSAGES

\msg_new:nnn { cvtobiw } { dim-exists } {
   The~length~'#1'~is~already~defined!
}

\msg_new:nnn { cvtobiw } { dim-undef } {
   The~length~'#1'~was~never~defined!
}

\msg_new:nnn { cvtobiw } { project-exists } {
   A~project~with~id~'#1'~already~exists!
}

\msg_new:nnn { cvtobiw } { project-unknown } {
   A~project~with~id~'#1'~doesn't~exist!
}

\msg_new:nnn { cvtobiw } { timeline } {
   '#1'~must~be~smaller~than~'#2'!
}

\msg_new:nnn { cvtobiw } { unknown-choice } {
   The~value~'#2'~is~not~allowed~for~key~'#1'! \\
   Allowed~values:~#3.
}

\msg_new:nnn { cvtobiw } { unknown-language } {
   The~language~'#1'~can't~be~used!
}

\msg_new:nnn { cvtobiw } { var-empty } {
   The~variable~'#1'~is~empty~in~the~current~language!
}

\msg_new:nnn { cvtobiw } { var-exists } {
   The~variable~'#1'~is~already~defined!
}

\msg_new:nnn { cvtobiw } { var-required } {
   The~variable~'#1'~must~be~set!
}

\msg_new:nnn { cvtobiw } { var-undef } {
   The~variable~'#1'~was~never~defined!
}



% PACKGE OPTIONS
% - language = <german|english>
%   default: german
% - show-frame = <true|false>
%   show help lines/grid
%   default: false
% - year-format = <YY|'YY|YYYY>
%   default: YY

\seq_new:N \g_cvtobiw_languages_seq
\seq_set_split:Nnn \g_cvtobiw_languages_seq { , }
   { german, english }

\keys_define:nn { cvtobiw } {

   language .choices:xn =
      { \seq_use:Nn \g_cvtobiw_languages_seq { , } }
      { \tl_set_eq:NN \g_cvtobiw_lanugage_tl \l_keys_choice_tl },
   language / unknown .code:n = {
      \msg_error:nnxxx { cvtobiw } { unknown-choice } { language } { #1 }
         { \seq_use:Nn \g_cvtobiw_languages_seq { ,~ } }
   },
   language .initial:n = { german },
   
   show-frame .bool_set:N = \g_cv_show_frame_bool,

   year-format .choices:nn =
      { YY, 'YY, YYYY }
      { \tl_set_eq:NN \g_cvtobiw_year_format_tl \l_keys_choice_tl },
   year-format / unknown .code:n = {
      \msg_error:nnnnn { cvtobiw } { unknown-choice } { year-format } { #1 }
         { YY,~'YY,~YYYY }
   },
   year-format .initial:n = { YY },

}

\ProcessKeysOptions { cvtobiw }



% LOAD PACKAGES

\RequirePackage{xparse}

\RequirePackage{tikz}
   \ExplSyntaxOff
      \usetikzlibrary{backgrounds,calc,positioning}
   \ExplSyntaxOn

\RequirePackage { siunitx }



% MACROS FOR TEXT VARIABLES
% \newvars[<prefix>]{<comma list of vars>}
% \setvar{<var-name>}{<content/value>}
% \usevar{<var-name>}
% \begin{languagecontent}{<language>} … \end{languagecontent}
% \citobiw_if_var_exist:n(TF) {<var-name>}
% \citobiw_if_var_empty:n(TF) {<var-name>}
% available vars:
% - main
% - image
% - logo
% - contact
% - skills
% - code

\prg_new_conditional:Npnn \citobiw_if_var_exist:n #1 { p, T, F, TF } {
   \tl_if_exist:cTF { cv_var_#1_ \tl_use:N \g_cvtobiw_lanugage_tl _tl } {
      \prg_return_true:
   } {
      \prg_return_false:
   }
}

\prg_new_conditional:Npnn \citobiw_if_var_empty:n #1 { p, T, F, TF } {
   \tl_if_empty:cTF { cv_var_#1_ \tl_use:N \g_cvtobiw_lanugage_tl _tl } {
      \prg_return_true:
   } {
      \prg_return_false:
   }
}

\NewDocumentCommand { \newvars } { O{} m } {
   \clist_map_inline:nn { #2 } {
      \seq_map_inline:Nn \g_cvtobiw_languages_seq {
         \tl_if_exist:cTF { cv_var_#1##1_####1_tl } {
            \msg_error:nnx { cvtobiw } { var-exists } { #1##1 }
         } {
            \tl_new:c { cv_var_#1##1_####1_tl }
         }
      }
   }
}

\NewDocumentCommand { \setvar } { m +m } {
   \tl_if_empty:NTF \l_cvtobiw_current_lanugage_tl {
      \seq_map_inline:Nn \g_cvtobiw_languages_seq {
         \cvtobiw_set_var:nnn { #1 } { ##1 } { #2 }
      }
   } {
      \cvtobiw_set_var:nnn { #1 } { \tl_use:N \l_cvtobiw_current_lanugage_tl } { #2 }
   }
}

\cs_new:Npn \cvtobiw_set_var:nnn #1#2#3 {
   \tl_if_exist:cTF { cv_var_#1_#2_tl } {
      \tl_gset:cn { cv_var_#1_#2_tl } { #3 }
   } {
      \msg_error:nnx { cvtobiw } { var-undef } { #1 }
   }
}

\NewDocumentCommand { \usevar } { m } {
   \tl_if_exist:cTF { cv_var_#1_ \tl_use:N \g_cvtobiw_lanugage_tl _tl } {
      \tl_use:c { cv_var_#1_ \tl_use:N \g_cvtobiw_lanugage_tl _tl }
      \citobiw_if_var_empty:nT { #1 } {
         \msg_warning:nnx { cvtobiw } { var-empty } { #1 }
      }
   } {
      \msg_error:nnx { cvtobiw } { var-undef } { #1 }
   }
}

\tl_new:N \l_cvtobiw_current_lanugage_tl

\NewDocumentEnvironment { languagecontent } { m } {
   \seq_if_in:NnTF \g_cvtobiw_languages_seq { #1 } {
      \tl_set:Nn \l_cvtobiw_current_lanugage_tl { #1 }
   } {
      \msg_error:nnx { cvtobiw } { unknown-language } { #1 }
   }
} {}

\newvars { main, image, logo, contact, skills, code }



% MACROS FOR LENGTHEN
% \setnewdim{<dim-name>}{<value>}
% \setdim{<dim-name>}{<value>}
% \usedim{<dim-name>}
% \showdim{<dim-name>} (show in mm rounded to one place)
% \cvtobiw_dim_to_decimal_in_mm_rounded:n {<dim-expression>}

\NewDocumentCommand { \setnewdim } { m m } {
   \dim_if_exist:cTF { l_cv_dim_#1_dim } {
      \msg_error:nnx { cvtobiw } { dim-exists } { #1 }
   } {
      \dim_new:c { l_cv_dim_#1_dim }
      \dim_set:cn { l_cv_dim_#1_dim } { #2 }
   }
}

\NewDocumentCommand { \setdim } { m m } {
   \dim_if_exist:cTF { l_cv_dim_#1_dim } {
      \dim_set:cn { l_cv_dim_#1_dim } { #2 }
   } {
      \msg_error:nnx { cvtobiw } { dim-undef } { #1 }
   }
}

\DeclareExpandableDocumentCommand { \usedim } { m } {
   \dim_if_exist:cTF { l_cv_dim_#1_dim } {
      \dim_use:c { l_cv_dim_#1_dim }
   } {
      \msg_error:nnx { cvtobiw } { dim-undef } { #1 }
   }
}

\cs_new:Npn \cvtobiw_dim_to_decimal_in_mm_rounded:n #1 {
   \SI [ round-mode = places, round-precision = 1 ]
      { \dim_to_decimal_in_unit:nn { #1 } { 1mm } }
      { \milli \meter }
}

\NewDocumentCommand { \showdim } { m } {
   \dim_if_exist:cTF { l_cv_dim_#1_dim } {
      \cvtobiw_dim_to_decimal_in_mm_rounded:n { \dim_use:c { l_cv_dim_#1_dim } }
   } {
      \msg_error:nnx { cvtobiw } { dim-undef } { #1 }
   }
}



% LAYOUT VARIABLES
% available dimensions:
% - margin-left
% - margin-right
% - margin-top
% - margin-bottom
% - gutter
%   (between columns)
% - left-col-width
% - right-col-width

\setnewdim { margin-left } { 18mm }
\setnewdim { margin-right } { \usedim { margin-left } }
\setnewdim { margin-top } { 24mm }
\setnewdim { margin-bottom } { 18mm }
\setnewdim { gutter } { 12mm }
\setnewdim { right-col-width } { 42mm }
\setnewdim { left-col-width } {
   \paperwidth
   - \usedim { margin-left }
   - \usedim { gutter }
   - \usedim { right-col-width }
   - \usedim { margin-right }
}
\setnewdim { eq-col-width } {
   (
      \paperwidth
      - \usedim { margin-left }
      - \usedim { gutter }
      - \usedim { margin-right }
   ) / 2
}



% VARIABLES AND MACROS FOR TIMELINE
% - \timelineentry{<year>}[<x pos.>]{<headline>}{<description>}
%   <year> can be either a single year YYYY or a range YYYY-YYYY.
%   YYYY can be replaced by 'today' to refer to the end of the time line;
%   prepend 'mid' to a year to refer to the middle beteen the given year
%   and the following one, e.g. 'mid2013'.
% - \citobiw_format_year:n {<year>}
% - \cvtobiw_make_timeline_entry_node:nnnn {<style>}{<width>}{<headline>}{<description>}
%   for use on a path
% available vars:
% - timeline-start
% - timeline-end
% - timeline-birth
% - timeline-entries
% available dimensions:
% - timeline-linewidth
% - timeline-raster
% - timeline-raster-start
% - timeline-entrywidth

\cs_new:Npn \cvtobiw_make_timeline_entry_node:nnnn #1#2#3#4 {
   node [#1, text~width=#2] {
      {\usekomafont{timeline-headline}#3\par}
      #4\par
   }
}

\NewDocumentCommand { \timelineentry } { m O{0} m +m O{12} } {
   \seq_set_split:Nnn \l_tmpa_seq { - } { #1 }
   \int_compare:nTF { \seq_count:N \l_tmpa_seq = 1 } {
      \seq_get_left:NN \l_tmpa_seq \l_tmpa_tl
      \draw [timelinespot]
         ($
            (timeline-\tl_use:N \l_tmpa_tl)
            + (\usedim{timeline-raster-start} + #2*\usedim{timeline-raster},0.5*1mm)
         $)
         \cvtobiw_make_timeline_entry_node:nnnn
            { timelineentryspot }
            { (#5+0.5)*\usedim{timeline-raster} }
            { #3 }
            { #4 }
         --
         ($
            (timeline-\tl_use:N \l_tmpa_tl)
            + (\usedim{timeline-raster-start} + #2*\usedim{timeline-raster},-0.5*1mm)
         $);
   } {
      \seq_get_left:NN \l_tmpa_seq \l_tmpa_tl
      \seq_get_right:NN \l_tmpa_seq \l_tmpb_tl
      \draw [timelinerange]
         ($
            (timeline-\tl_use:N \l_tmpa_tl)
            + (\usedim{timeline-raster-start} + #2*\usedim{timeline-raster},0)
         $)
         \cvtobiw_make_timeline_entry_node:nnnn
            { timelineentryrange }
            { (#5+0.5)*\usedim{timeline-raster} }
            { #3 }
            { #4 }
         --
         ($
            (timeline-\tl_use:N \l_tmpb_tl)
            + (\usedim{timeline-raster-start} + #2*\usedim{timeline-raster},0)
         $);
   }
}

\tl_new:N \g_cvtobiw_year_format_yy_tl
\tl_set:Nn \g_cvtobiw_year_format_yy_tl { YY }

\tl_new:N \g_cvtobiw_year_format_ayy_tl
\tl_set:Nn \g_cvtobiw_year_format_ayy_tl { 'YY }

\tl_new:N \g_cvtobiw_year_format_yyyy_tl
\tl_set:Nn \g_cvtobiw_year_format_yyyy_tl { YYYY }

\cs_new:Npn \citobiw_format_year:n #1 {
   \tl_case:Nn \g_cvtobiw_year_format_tl {
      \g_cvtobiw_year_format_yy_tl { \citobiw_format_year_yy:n { #1 } }
      \g_cvtobiw_year_format_ayy_tl { ’ \citobiw_format_year_yy:n { #1 } }
      \g_cvtobiw_year_format_yyyy_tl { #1 }
   }
}
\cs_new:Npn \citobiw_format_year_yy:n #1 {
   \int_set:Nn \l_tmpa_int { \int_mod:nn { #1 } { 100 } }
   \int_compare:nTF { \l_tmpa_int < 10 } {
      0 \int_use:N \l_tmpa_int
   } {
      \int_use:N \l_tmpa_int
   }
}

\newvars [ timeline- ] { birth, start, end, entries, raster-div }

\setvar { timeline-raster-div } { 30 }

\setnewdim { timeline-linewidth } { 1mm }

\setnewdim { timeline-birthgap } { 9mm }

\setnewdim { timeline-raster-start } { 
   \usedim{left-col-width} / \usevar{timeline-raster-div}
}

\setnewdim { timeline-raster } { 
   \usedim{left-col-width} / \usevar{timeline-raster-div}
}

\setnewdim { timeline-entrysep } { 1mm }

\newkomafont { timeline-headline } { \bfseries }



% TIKZ SETTINGS

\tikzset{
% gereral
   every~node/.style = {
      inner~sep = 0pt,
      outer~sep = 0pt,
   },
   activate~parskip/.style = {
      execute~at~begin~node = { \parskip = 0.5\baselineskip },
   },
   guide/.style = {
      magenta,
      ultra~thin,
      every~node/.style = {
         font = \tiny,
      },
   },
   grid/.style = {
      loosely~dashed,
   },
% for CV
   maintext/.style = {
      anchor = north~west,
      text~width = \usedim{left-col-width},
      align = justify,
      activate~parskip,
   },
   image/.style = {
      anchor = north~west,
   },
   logo/.style = {
      anchor = north~west,
   },
   contact/.style = {
      anchor = north~west,
      text~width = \usedim{right-col-width},
      align = left,
      activate~parskip,
   },
   skills/.style = {
      anchor = south~west,
      text~width = \usedim{right-col-width},
      align = left,
   },
   codehint/.style = {
      above~left = 5mm~and~0mm,
      font = \tiny\itshape,
   },
   timeline/.style = {
      line~width = \usedim{timeline-linewidth},
      draw = spot,
   },
   timelinetoday/.style = {
      timeline,
   },
   birthline/.style = {
      timeline,
      dash~pattern = on~\usedim{timeline-linewidth}~off~\usedim{timeline-linewidth},
   },
   timelineyear/.style = {
      fill = white,
      font = \tiny,
      minimum~width = \usedim{timeline-linewidth} + 0.4pt,
      inner~ysep = 0.5ex,
   },
   timelinespot/.style = {
      timeline,
      draw=ultralightgray,
   },
   timelinerange/.style = {
      timelinespot,
      shorten~<= -\pgflinewidth/2,
      shorten~>= -\pgflinewidth/2,
   },
   timelineentry/.style = {
   },
   timelineentryspot/.style = {
      timelineentry,
      below~right = \pgflinewidth/2~and~\pgflinewidth/2+\usedim{timeline-entrysep},
      anchor=mid~west,
   },
   timelineentryrange/.style = {
      timelineentry,
      above~right = \pgflinewidth/2~and~\pgflinewidth/2+\usedim{timeline-entrysep},
      anchor = north~west,
   },
% for Portfolio
   project/.style = {
      below~right = 0pt,
      text~width = \usedim{eq-col-width},
      align = justify,
      activate~parskip,
   },
}



% CHANGE FONT SIZE
\def\normalsize {
   \@setfontsize \normalsize { 9 } { 12.5 }
}



% MACRO TO PRINT THE CV
% \MakeCV

\NewDocumentCommand { \MakeCV } { } {{
   \clearpage
   \pagestyle { empty }
   \begin{tikzpicture}[remember~picture, overlay]
      % coordinates
      %% page
      \coordinate (TL) at ($(current~page.north~west)+(\usedim{margin-left},-\usedim{margin-top})$);
      \coordinate (TR) at ($(current~page.north~east)+(-\usedim{margin-right},-\usedim{margin-top})$);
      \coordinate (TM) at ($(TL)!0.5!(TR)$);
      \coordinate (BL) at ($(current~page.south~west)+(\usedim{margin-left},\usedim{margin-bottom})$);
      \coordinate (BR) at ($(current~page.south~east)+(-\usedim{margin-right},\usedim{margin-bottom})$);
      \coordinate (BM) at ($(BL)!0.5!(BR)$);
      %% columns
      %%% left column
      \coordinate (left-col-TL) at (TL);
      \coordinate (left-col-TR) at ($(left-col-TL)+(\usedim{left-col-width},0)$);
      \coordinate (left-col-BL) at (BL);
      \coordinate (left-col-BR) at ($(left-col-BL)+(\usedim{left-col-width},0)$);
      %%% right column
      \coordinate (right-col-TL) at ($(left-col-TR)+(\usedim{gutter},0)$);
      \coordinate (right-col-TR) at ($(right-col-TL)+(\usedim{right-col-width},0)$);
      \coordinate (right-col-BL) at ($(left-col-BR)+(\usedim{gutter},0)$);
      \coordinate (right-col-BR) at ($(right-col-BL)+(\usedim{right-col-width},0)$);
      % frame / help lines
      \bool_if:NT \g_cv_show_frame_bool {
         \begin{scope}[guide]
            \draw (TL) rectangle (BR);
            \draw (left-col-TR) -- (left-col-BR);
            \draw (right-col-TL) -- (right-col-BL);
            \draw (right-col-TR) -- (right-col-BR);
            \node at ($(left-col-TL)!0.5!(left-col-TR)$) [above] { \showdim{left-col-width} };
            \node at ($(left-col-TR)!0.5!(right-col-TL)$) [above] { \showdim{gutter} };
            \node at ($(right-col-TL)!0.5!(right-col-TR)$) [above] { \showdim{right-col-width} };
            \foreach \x in { 1, ..., \usevar{timeline-raster-div} }
            { 
               \draw [grid]
                  ($
                     (left-col-TL)
                     +(\usedim{timeline-raster-start},0)
                     +(\x*\usedim{timeline-raster}-\usedim{timeline-raster},0)
                  $)
                  coordinate (tmp)
                  --
                  ($(left-col-BL)!(tmp)!(left-col-BR)$)
                  ;
            }
            \node at ($(left-col-BL)+(\usedim{timeline-raster-start},0)$) [below~right, align=left] {
               raster-start:~\showdim{timeline-raster-start}\\
               raster-width:~\showdim{timeline-raster}\\
               raster-div:~\usevar{timeline-raster-div}
            };
            \draw ($(current~page.north~west)!(TL)!(current~page.north~east)$)
               |- ($(current~page.north~west)!(TL)!(current~page.south~west)$)
               node [pos=0.25, below, sloped] {\showdim{margin-top}}
               node [pos=0.75, above] {\showdim{margin-left}};
            \draw ($(current~page.south~west)!(BR)!(current~page.south~east)$)
               |- ($(current~page.north~east)!(BR)!(current~page.south~east)$)
               node [pos=0.25, below, sloped] {\showdim{margin-bottom}}
               node [pos=0.75, below] {\showdim{margin-right}};
         \end{scope}
      }
      % main text
      \node (maintext) [maintext] at (left-col-TL) { \usevar { main } };
      % time line
      \bool_if:nTF {
         \citobiw_if_var_empty_p:n { timeline-start }
         ||
         \citobiw_if_var_empty_p:n { timeline-end }
      } {
         \msg_warning:nnn { cvtobiw } { var-required } { timeline-start }
         \msg_warning:nnn { cvtobiw } { var-required } { timeline-end }
      } {
         \int_compare:nT { \usevar{timeline-start} > \usevar{timeline-end} } {
            \msg_error:nnnn { cvtobiw } { timeline } { timeline-start } { timeline-end }
         }
         \citobiw_if_var_empty:nTF { timeline-birth } {
            \coordinate (timeline-\usevar{timeline-start})
               at ($(maintext.south~west)+(\usedim{timeline-linewidth}/2,-15mm)$);
         } {
            \int_compare:nT { \usevar{timeline-birth} > \usevar{timeline-start} } {
               \msg_error:nnnn { cvtobiw } { timeline } { timeline-birth } { timeline-start }
            }
            \coordinate (timeline-\usevar{timeline-birth})
               at ($(maintext.south~west)+(\usedim{timeline-linewidth}/2,-15mm)$);
            \coordinate [below=\usedim{timeline-birthgap}~of~timeline-\usevar{timeline-birth}]
               (timeline-\usevar{timeline-start});
            \draw [birthline] (timeline-\usevar{timeline-birth}) -- (timeline-\usevar{timeline-start});
            \node [timelineyear] at (timeline-\usevar{timeline-birth})
               { \citobiw_format_year:n { \usevar{timeline-birth} } };
         }
         \coordinate (timeline-\usevar{timeline-end}) at ($(left-col-BL)+(\usedim{timeline-linewidth}/2,0)$);
         \coordinate (timeline-today) at
            ($(current~page.south~west)!(timeline-\usevar{timeline-end})!(current~page.south~east)$);
         \draw [timeline]
            let \p1=(timeline-\usevar{timeline-start}), \p2=(timeline-\usevar{timeline-end}) in
            \pgfextra { \dim_gset:Nn \l_tmpa_dim { \y1 - \y2 } }
            (\p1) -- (\p2);
         \dim_set:Nn \l_tmpb_dim { \l_tmpa_dim / ( \usevar{timeline-end} - \usevar{timeline-start} ) }
         \foreach \Y [count=\n~from~0] in { \usevar{timeline-start}, ..., \usevar{timeline-end} } {
            \coordinate (timeline-\Y)
               at ($(timeline-\usevar{timeline-start})+(0,-\n*\dim_use:N \l_tmpb_dim)$);
            \node [timelineyear] at (timeline-\Y) { \citobiw_format_year:n { \Y } };
            \coordinate (timeline-mid\Y)
               at ($(timeline-\usevar{timeline-start})+(0,{-(\n+0.5)*\dim_use:N \l_tmpb_dim})$);
         }
         \begin{scope}[on~background~layer]]
            \draw [timelinetoday] (timeline-\usevar{timeline-end}) -- (timeline-today);
         \end{scope}
         \usevar{timeline-entries}
      }
      % image
      \node (image) [image] at (right-col-TL) { \usevar { image } };
      % logo
      \node (logo) [below = 5mm~of~image.south~west, logo] { \usevar { logo } };
      % contact
      \node [below = 5mm~of~logo.south~west, contact] { \usevar { contact } };
      % skills
      \node [skills] at (right-col-BL) { \usevar { skills } };
      % code hint
      \node [codehint] at ($(current~page.south~west)!(right-col-BR)!(current~page.south~east)$)
         { \usevar { code } };
   \end{tikzpicture}
   \clearpage
}}



% MACROS FOR PROJECTS
% - \newproject{<id>}
%   the <id> must be a unique name containing only lowercase letters and dashes
% - \setprojectvar{<id>}{<var>}{<content>}
% - \l_cvtobiw_projects_seq
%   list with all project ids
% available vars (for \setprojectvar):
% - title
% - content

\seq_new:N \l_cvtobiw_projects_seq

\seq_map_inline:Nn \g_cvtobiw_languages_seq {
   \seq_new:c { l_cvtobiw_projects_#1_seq }
}

\NewDocumentCommand { \newproject } { m } {
   \seq_if_in:NnTF \l_cvtobiw_projects_seq { #1 } {
      \msg_error:nnx { cvtobiw } { project-exists } { #1 }
   } {
      \seq_gput_right:Nn \l_cvtobiw_projects_seq { #1 }
      \newvars [ project-#1- ] { title, content }
   }
}

\cs_new:Npn \cvtobiw_seq_gput_right_no_duplicates:Nn #1#2 {
   \seq_if_in:NnF #1 { #2 } {
      \seq_gput_right:Nn #1 { #2 }
   }
}
\cs_generate_variant:Nn \cvtobiw_seq_gput_right_no_duplicates:Nn { c }

\NewDocumentCommand { \setprojectvar } { m m +m } {
   \seq_if_in:NnTF \l_cvtobiw_projects_seq { #1 } {
      \tl_if_empty:NTF \l_cvtobiw_current_lanugage_tl {
         \seq_map_inline:Nn \g_cvtobiw_languages_seq {
            \cvtobiw_seq_gput_right_no_duplicates:cn { l_cvtobiw_projects_##1_seq } { #1 }
         }
      } {
         \cvtobiw_seq_gput_right_no_duplicates:cn
            { l_cvtobiw_projects_ \tl_use:N \l_cvtobiw_current_lanugage_tl _seq } { #1 }
      }
      \setvar { project-#1-#2 } { #3 }
   } {
      \msg_error:nnx { cvtobiw } { project-unknown } { #1 }
   }
}

\newkomafont { project-headline } { \bfseries }



% MACRO TO PRINT THE PORTFOLIO
% \MakePortfolio[<portfolio list>]
% The <portfolio list> can be used to show only certein projects, it must be a comma
% separated list of porject <id>s; otherwise all projects are shown.

\NewDocumentCommand { \MakePortfolio } { o } {{
   \IfValueTF { #1 } {
      \seq_set_split:Nnn \l_cvtobiw_projects_seq { , } { #1 }
      \seq_map_inline:Nn \l_cvtobiw_projects_seq {
         \citobiw_if_var_exist:nF { project-##1-title } {
            \msg_error:nnx { cvtobiw } { project-unknown } { ##1 }
         }
      }
   } {
      \seq_set_eq:Nc \l_cvtobiw_projects_seq
         { l_cvtobiw_projects_ \tl_use:N \g_cvtobiw_lanugage_tl _seq }
   }
   \clearpage
   \pagestyle { empty }
   \begin{tikzpicture}[remember~picture, overlay]
      % coordinates
      %% page
      \coordinate (TL) at ($(current~page.north~west)+(\usedim{margin-left},-\usedim{margin-top})$);
      \coordinate (TR) at ($(current~page.north~east)+(-\usedim{margin-right},-\usedim{margin-top})$);
      \coordinate (TM) at ($(TL)!0.5!(TR)$);
      \coordinate (BL) at ($(current~page.south~west)+(\usedim{margin-left},\usedim{margin-bottom})$);
      \coordinate (BR) at ($(current~page.south~east)+(-\usedim{margin-right},\usedim{margin-bottom})$);
      \coordinate (BM) at ($(BL)!0.5!(BR)$);
      %% columns
      %%% left column
      \coordinate (left-col-TL) at (TL);
      \coordinate (left-col-TR) at ($(left-col-TL)+(\usedim{eq-col-width},0)$);
      \coordinate (left-col-BL) at (BL);
      \coordinate (left-col-BR) at ($(left-col-BL)+(\usedim{eq-col-width},0)$);
      %%% right column
      \coordinate (right-col-TL) at ($(left-col-TR)+(\usedim{gutter},0)$);
      \coordinate (right-col-TR) at ($(right-col-TL)+(\usedim{eq-col-width},0)$);
      \coordinate (right-col-BL) at ($(left-col-BR)+(\usedim{gutter},0)$);
      \coordinate (right-col-BR) at ($(right-col-BL)+(\usedim{eq-col-width},0)$);
      %% projects
      \int_set:Nn \l_tmpa_int { \seq_count:N \l_cvtobiw_projects_seq / 2 }
      \dim_set:Nn \l_tmpa_dim { 
         (
            \paperheight - \usedim{margin-top} - \usedim{margin-bottom}
         ) / \int_use:N \l_tmpa_int
      }
      \foreach \y in { 1, ..., \int_use:N \l_tmpa_int } {
         \coordinate (P\y-L) at ($(left-col-TL)+(0,{-(\y-1) * \dim_use:N \l_tmpa_dim})$);
         \coordinate (P\y-R) at ($(right-col-TL)+(0,{-(\y-1) * \dim_use:N \l_tmpa_dim})$);
      }
      % frame / help lines
      \bool_if:NT \g_cv_show_frame_bool {
         \begin{scope}[guide]
            \draw (TL) rectangle (BR);
            \draw (left-col-TR) -- (left-col-BR);
            \draw (right-col-TL) -- (right-col-BL);
            \draw (right-col-TR) -- (right-col-BR);
            \node at ($(left-col-TL)!0.5!(left-col-TR)$) [above] { \showdim{eq-col-width} };
            \node at ($(left-col-TR)!0.5!(right-col-TL)$) [above] { \showdim{gutter} };
            \node at ($(right-col-TL)!0.5!(right-col-TR)$) [above] { \showdim{eq-col-width} };
            \draw ($(current~page.north~west)!(TL)!(current~page.north~east)$)
               |- ($(current~page.north~west)!(TL)!(current~page.south~west)$)
               node [pos=0.25, below, sloped] {\showdim{margin-top}}
               node [pos=0.75, above] {\showdim{margin-left}};
            \draw ($(current~page.south~west)!(BR)!(current~page.south~east)$)
               |- ($(current~page.north~east)!(BR)!(current~page.south~east)$)
               node [pos=0.25, below, sloped] {\showdim{margin-bottom}}
               node [pos=0.75, below] {\showdim{margin-right}};
            \node at (left-col-BL) [below~right, align=left] {
               number~of~projects:~\seq_count:N \l_cvtobiw_projects_seq \\
               number~of~rows:~\int_use:N \l_tmpa_int \\
               cell-height:~\cvtobiw_dim_to_decimal_in_mm_rounded:n { \dim_use:N \l_tmpa_dim }
            };
         \end{scope}
      }
      % projects
      \foreach \p in { 1, ..., \seq_count:N \l_cvtobiw_projects_seq } {
         \int_if_odd:nTF { \p } {
            \coordinate (P) at (P\int_eval:n{(\p+1)/2}-L);
         } {
            \coordinate (P) at (P\int_eval:n{\p/2}-R);
         }
         \node [project] at (P) {
            { \usekomafont { project-headline }
               \usevar { project- \seq_item:Nn \l_cvtobiw_projects_seq { \p } -title }
            }
            \par
            \usevar { project- \seq_item:Nn \l_cvtobiw_projects_seq { \p } -content }
         };
      }
      % code hint
      \node [codehint] at ($(current~page.south~west)!(right-col-BR)!(current~page.south~east)$)
         { \usevar { code } };
   \end{tikzpicture}
   \clearpage
}}



% HELPERS
% \skill{<Label>}{<percent without %-sing>}

\setnewdim{skill-width}{ 20mm }
\setnewdim{skill-gap}{ 2mm }
\setnewdim{skill-bar-width}{ \usedim{right-col-width} - \usedim{skill-width} - \usedim{skill-gap} }
\setnewdim{skill-bar-height}{ 2pt }
\setnewdim{skill-bar-shift}{ 0.32ex }

\NewDocumentCommand { \skill } { m m } {
   \makebox [ \usedim{skill-width} ]  [ l ] { #1 }
   \hspace { \usedim{skill-gap} }
   \dim_set:Nn \l_tmpa_dim { \usedim{skill-bar-width} * #2 / 100 }
   \dim_set:Nn \l_tmpb_dim { \usedim{skill-bar-width} - \l_tmpa_dim }
   \textcolor { spot } {
      \rule [ \usedim{skill-bar-shift} ] { \dim_use:N \l_tmpa_dim } { \usedim{skill-bar-height} }
   }
   \textcolor { ultralightgray } {
      \rule [ \usedim{skill-bar-shift} ] { \dim_use:N \l_tmpb_dim } { \usedim{skill-bar-height} }
   }
}



% EOF

\endinput